Разработываемая БД обслуживает подобие известной игры Civilization.
Разумеется многие концепты игры утрированы и опущены, чтобы реализовать все нужно время, но думаю смог бы сделать и все до конца.

Суть проекта такова.
Существует игровой мир, поделенный на ячейки. Координаты заданы по двум осям X и Y. Таким образом, положение любой ячейки игрового поля определяется как задание x и y, например (10, 400).
В мире цивилизации существуют нации.
Нации могут иметь города.
Нации могут иметь боевые (копейщики, рыцари и т.п.) и необоевые единицы (рабочие, поселенцы), далее просто юниты.
Положение городов и юнитов на игровой карте мира определяется координатами, указанными выше. Один город и один юнит могут занимать лишь одну ячейку.
Нации имеют дипломатические отношения. Они могут находится в мире, союзе или войне.
Нации имеют возможность улучшать ячейки. Например, можно построить ферму на равнине, не нельзя рудник. Или можно построить рудник, но на холмах или горах.
В качестве примера различных игровых действий реализовано:
1) Функция проверки по определению воюют 2 нации или нет.
2) Функция проверка по определению в союзе 2 нации или нет.
3) Процедура объявления войны одной фракции другой.
4) Представление, показывающее текущую дипломатическую ситуацию глобально.
5) Представление, показывающее сколько и каких юнитов находится на определенном типе местности.
6) Триггер, запрещающий непосредственное удаление юнитов. Вместо этого мы считаем, что будем выставлять флаг "dead" для удаленных юнитов.

На самом деле я реализовал лишь необходимый минимум согласно ТЗ, но при этом ничто не мешает посидеть пару неделек или чуть больше и можно было бы вообще практически весь концент игры перенести на БД, а само приложение лишить бизнес-логики, оставив ему лишь допустимые действия, которые определяются самой БД + оставить запрос на подтверждение действия.

Состав файлов:
1) course.sql включает в себя создание структуры БД, ее наполнение, определение функционала.
2) requests.sql включает в себя тесты.

